// Generated by ego.
// DO NOT EDIT

//line model/model.ego:2
package model

import "fmt"
import "html"
import "io"

import (
	"github.com/boourns/scaffold/ast"
	"github.com/boourns/scaffold/sqlgen"
	"github.com/boourns/scaffold/util"
	"strings"
)

func modelTemplate(w io.Writer, m *ast.Model) {

//line model/model.ego:14
	_, _ = io.WriteString(w, "package ")
//line model/model.ego:15
	_, _ = fmt.Fprint(w, strings.ToLower(m.Package))
//line model/model.ego:16
	_, _ = io.WriteString(w, "\n\nimport (\n\t\"github.com/boourns/dbutil\"\n  \"database/sql\"\n  \"fmt\"\n)\n\nfunc sqlFieldsFor")
//line model/model.ego:23
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:23
	_, _ = io.WriteString(w, "() string {\n  return \"")
//line model/model.ego:24
	_, _ = fmt.Fprint(w, util.StringJoin(m.FieldSlice(), ", "))
//line model/model.ego:24
	_, _ = io.WriteString(w, "\"\n}\n\nfunc load")
//line model/model.ego:27
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:27
	_, _ = io.WriteString(w, "(rows *sql.Rows) (*")
//line model/model.ego:27
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:27
	_, _ = io.WriteString(w, ", error) {\n\tret := ")
//line model/model.ego:28
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:28
	_, _ = io.WriteString(w, "{}\n\n\terr := rows.Scan(")
//line model/model.ego:30
	_, _ = fmt.Fprint(w, fieldString("&ret.", m.FieldSlice(), ""))
//line model/model.ego:30
	_, _ = io.WriteString(w, ")\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn &ret, nil\n}\n\nfunc Select")
//line model/model.ego:37
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:37
	_, _ = io.WriteString(w, "(tx dbutil.DBLike, cond string, condFields ...interface{}) ([]*")
//line model/model.ego:37
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:37
	_, _ = io.WriteString(w, ", error) {\n  ret := []*")
//line model/model.ego:38
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:38
	_, _ = io.WriteString(w, "{}\n  sql := fmt.Sprintf(\"SELECT %s from ")
//line model/model.ego:39
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:39
	_, _ = io.WriteString(w, " %s\", sqlFieldsFor")
//line model/model.ego:39
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:39
	_, _ = io.WriteString(w, "(), cond)\n\trows, err := tx.Query(sql, condFields...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tfor rows.Next() {\n    item, err := load")
//line model/model.ego:45
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:45
	_, _ = io.WriteString(w, "(rows)\n    if err != nil {\n      return nil, err\n    }\n    ret = append(ret, item)\n  }\n  rows.Close()\n  return ret, nil\n}\n\nfunc (s *")
//line model/model.ego:55
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:55
	_, _ = io.WriteString(w, ") Update(tx dbutil.DBLike) error {\n\t\tstmt, err := tx.Prepare(fmt.Sprintf(\"UPDATE ")
//line model/model.ego:56
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:56
	_, _ = io.WriteString(w, "(%s) VALUES(")
//line model/model.ego:56
	_, _ = fmt.Fprint(w, util.QuestionMarks(len(m.FieldSlice())))
//line model/model.ego:56
	_, _ = io.WriteString(w, ") WHERE ")
//line model/model.ego:56
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:56
	_, _ = io.WriteString(w, ".ID = ?\", sqlFieldsFor")
//line model/model.ego:56
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:56
	_, _ = io.WriteString(w, "()))\n\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n    params := []interface{}{")
//line model/model.ego:62
	_, _ = fmt.Fprint(w, fieldString("s.", m.FieldSlice(), ""))
//line model/model.ego:62
	_, _ = io.WriteString(w, "}\n    params = append(params, s.ID)\n\n\t\t_, err = stmt.Exec(params...)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n    return nil\n}\n\nfunc (s *")
//line model/model.ego:73
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:73
	_, _ = io.WriteString(w, ") Insert(tx dbutil.DBLike) error {\n\t\tstmt, err := tx.Prepare(\"INSERT INTO ")
//line model/model.ego:74
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:74
	_, _ = io.WriteString(w, "(")
//line model/model.ego:74
	_, _ = fmt.Fprint(w, fieldString("", m.FieldSliceWithoutID(), ""))
//line model/model.ego:74
	_, _ = io.WriteString(w, ") VALUES(")
//line model/model.ego:74
	_, _ = fmt.Fprint(w, util.QuestionMarks(len(m.FieldSliceWithoutID())))
//line model/model.ego:74
	_, _ = io.WriteString(w, ")\")\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\tresult, err := stmt.Exec(")
//line model/model.ego:79
	_, _ = fmt.Fprint(w, fieldString("s.", m.FieldSliceWithoutID(), ""))
//line model/model.ego:79
	_, _ = io.WriteString(w, ")\n\t\tif err != nil {\n\t\t\treturn err\n    }\n\n    s.ID, err = result.LastInsertId()\n    if err != nil {\n      return err\n    }\n\t  return nil\n}\n\nfunc (s *")
//line model/model.ego:91
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:91
	_, _ = io.WriteString(w, ") Delete(tx dbutil.DBLike) error {\n\t\tstmt, err := tx.Prepare(\"DELETE FROM ")
//line model/model.ego:92
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:92
	_, _ = io.WriteString(w, " WHERE ID = ?\")\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t_, err = stmt.Exec(s.ID)\n\t\tif err != nil {\n\t\t\treturn err\n    }\n\n\t  return nil\n}\n\nfunc Create")
//line model/model.ego:105
	_, _ = fmt.Fprint(w, m.Name)
//line model/model.ego:105
	_, _ = io.WriteString(w, "Table(tx dbutil.DBLike) error {\n\t\tstmt, err := tx.Prepare(`")
//line model/model.ego:106
	_, _ = fmt.Fprint(w, sqlgen.CreateTable(m))
//line model/model.ego:106
	_, _ = io.WriteString(w, "`)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t_, err = stmt.Exec()\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t  return nil\n}\n")
//line model/model.ego:117
}

var _ fmt.Stringer
var _ io.Reader
var _ = html.EscapeString
